//
//  MyTabBarView.m
//  Product Temp
//
//  Created by jianjie on 16/1/8.
//  Copyright © 2016年 jianjie. All rights reserved.
//

#import "MyTabBarView.h"
#import "UIColor+Hex.h"

#define BgImageViewImage @"dibu@2x.png"

@interface MyTabBarView ()

//DATA

@end

@implementation MyTabBarView
{
    BOOL _isCreated;
    NSInteger _index;
}

//初始化方法
#pragma mark - InitView
-(instancetype)initWithFrame:(CGRect)frame
          itemImageNameArray:(NSArray *)itemImageNameArray
      itemSeleImageNameArray:(NSArray *)itemSeleImageNameArray
          itemTitleNameArray:(NSArray *)itemTitleNameArray
{
    if (self = [super initWithFrame:frame])
    {
        self.itemImageNameArray = itemImageNameArray;
        self.itemSeleImageNameArray = itemSeleImageNameArray;
        self.itemTitleNameArray = itemTitleNameArray;
        [self lazyCreateUI];
        [self layoutSubview];
        
        //创建按钮视图
        [self createTabBarButton];
    }
    return self;
}

//创建UI
#pragma mark - CreateUI
- (void)lazyCreateUI
{
    if (_isCreated == YES)  return;
    
    // createUI
    
    [self addSubview:self.bgView];
    
    _isCreated = YES;
}

//创建大小
- (void)layoutSubview
{
    //You should set subviews constrainsts or frame here
    _bgView.frame = CGRectMake(0, 0, self.frame.size.width, self.frame.size.height);
}

//根据数据初始化view
#pragma mark - Config Cell's Data

//- (void)configMainHeadViewWithUserInfoDto:(UserInfoDto *)userInfoDto
//{
//
//}

//点击事件
#pragma mark - Event response

//系统代理
#pragma mark - SystemDelegate

//页面代理
#pragma mark - CustomDelegate
// button、gesture, etc

//私有方法
#pragma mark - Private methods

- (void)createTabBarButton
{
    NSInteger count = _itemTitleNameArray.count;
    for (int i=0; i<count; i++)
    {
        UIControl *control = [[UIControl alloc]initWithFrame:CGRectMake(__kScreenWidth__/count*i, 0, __kScreenWidth__/count, __KSize(98))];
        control.backgroundColor = [UIColor clearColor];
        control.tag = 100+i;
        [control addTarget:self action:@selector(btnClickedOK:) forControlEvents:UIControlEventTouchUpInside];
        [_bgView addSubview:control];
        
        UIImageView *imageView = [[UIImageView alloc]initWithFrame:CGRectMake(__kScreenWidth__/count/2-__KSize(21), __KSize(15), __KSize(21*2), __KSize(21*2))];
        imageView.tag = 11111+i;
        
        [control addSubview:imageView];
        
        UILabel *label = [[UILabel alloc]init];
        label.frame = CGRectMake(0, control.frame.size.height-__KSize(20 + 11), __kScreenWidth__/count, __KSize(20));
        label.text = _itemTitleNameArray[i];
        label.textAlignment = NSTextAlignmentCenter;
        label.font = [UIFont systemFontOfSize:__KSize(20)];
        label.tag = 22222+i;
        [control addSubview:label];
        if (i == 0)
        {
            imageView.image = [UIImage imageNamed:self.itemSeleImageNameArray[i]];
            label.textColor =[UIColor colorWithHexString:@"#dc3b40"];
        }
        else
        {
            imageView.image = [UIImage imageNamed:self.itemImageNameArray[i]];
            label.textColor = [UIColor colorWithHexString:@"#999999"];
        }
        
    }
}

-(void)tabClick:(UIButton *)btn{
   
    if (btn.tag == _index) {
         btn.selected = YES;
    }
    NSLog(@"%ld",btn.tag);
}
//公有方法
#pragma mark - Public methods

- (void)btnClickedOK:(UIControl *)btn
{    
    if ([self.delegate respondsToSelector:@selector(myTabBarViewBtnClicked:)])
    {
        [self.delegate myTabBarViewBtnClicked:btn.tag - 100];
    }
}

//set和get方法
#pragma mark - Getters and Setters
// initialize views here, etc

- (UIView *)bgView
{
    if (_bgView == nil) {
        _bgView = [[UIView alloc] init];
        _bgView.backgroundColor = [UIColor whiteColor];
        _bgView.userInteractionEnabled = YES;
    }
    return _bgView;
}

- (NSArray *)itemSeleImageNameArray
{
    if (!_itemSeleImageNameArray) {
        _itemSeleImageNameArray = [NSArray array];
    }
    return _itemSeleImageNameArray;
}

- (NSArray *)itemTitleNameArray
{
    if (!_itemTitleNameArray) {
        _itemTitleNameArray = [NSArray array];
    }
    return _itemTitleNameArray;
}

- (NSArray *)itemImageNameArray
{
    if (!_itemImageNameArray) {
        _itemImageNameArray = [NSArray array];
    }
    return _itemImageNameArray;
}




@end
